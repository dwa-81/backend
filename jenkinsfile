pipeline {
    agent {
        label 'AGENT-1'
    }
    options {
        timeout(time: 10, unit: 'MINUTES')
        disableConcurrentBuilds()
    }
    environment {
        DEBUG = 'ture'
        appVersion= ''
    }
    

    stages {
        stage('Read the version') {
            steps {
                script{
                    def packageJson = readJSON file: 'package.json'
                    appVersion = packageJson.version
                    echo "App version: ${appVersion}"
                }                  
            }
        }
        stage('Install Dependencies') {
            steps {
               
                 sh  'npm install'
               
            }
        }
        stage('Docker build') {
            steps {
                
                  sh """ 
                  docker build -t prash6645/backend:${appVersion} .
                  docker images
                  """
                
            }
        }
        
    }


    post {
        always{
            echo "this section run always"
            deleteDir()
        }
        success{
            echo "this section run when pipeline success"
        }
        failure{
            echo "this section run when pipeline failure"
        }
    }
}